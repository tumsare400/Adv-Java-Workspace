package com.capgemini.spring.mvc.dao;

import java.util.List;

import org.springframework.jdbc.core.JdbcTemplate;

import com.capgemini.spring.mvc.controller.BankAccountController;
import com.capgemini.spring.mvc.exception.AccountNotFoundException;

public class BankAccountDaoImpl implements BankAccountDao{

	private JdbcTemplate jdbcTemplate;  
	

	public void setDataSource(JdbcTemplate jdbcTemplate) {
 		this.jdbcTemplate = jdbcTemplate;
 		
 	}
	
	@Override
	public double getBalance(long accountId) throws AccountNotFoundException {
		String query = "SELECT account_balance FROM bankaccounts WHERE account_id="+accountId;
		Double balance = -1.0;
               try{
		 balance = jdbcTemplate.queryForObject(query, Double.class);
		
		} catch (Exception e) {
			throw new AccountNotFoundException("Account not exist");
		}
		

		return balance;
	}

	@Override
	public void updateBalance(long accountId, double newBalance) throws AccountNotFoundException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean deleteBankAccount(long accountId) throws AccountNotFoundException {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean addNewBankAccount(BankAccountController account) {

		String query = "INSERT INTO bankaccounts (customer_name,account_type,account_balance) VALUES (?,?,?)";
		Object params[] = {account.getAccountHolderName(),account.getAccountType(),account.getAccountBalance()};
		int result = jdbcTemplate.update(query, params);

		if(result==1)
			return true;

		return false;
	}

	@Override
	public List<BankAccountController> findAllBankAccountsDetails() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public BankAccountController searchAccountDetails(long accountId) throws AccountNotFoundException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean updateBankAccountDetails(long accountId, String accountHolderName, String accountType)
			throws AccountNotFoundException {
		// TODO Auto-generated method stub
		return false;
	}

}
